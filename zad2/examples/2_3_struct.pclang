
import conv
import stdio


struct vector3:
    x: double
    y: double
    z: double

    fn str() -> string:
        return "\(this.x), \(this.y), \(this.z)"

    fn binop(right: vector3, op: int) -> vector3:
        result := vector3{0.0,0.0,0.0}
        if op == cast(int)'+':
            result.x = this.x + right.x
            result.y = this.y + right.y
            result.z = this.z + right.z
        else:
            println("Unknown operation '\(op)'")
        return result

fn main(argc: int, argv: byte**) -> int:

    myvector := vector3{1.0, 2.0, 3.0}
    myvector2 := vector3{0.5, 1.0, 2.0}

    println(myvector)
    println(myvector.x)
    println(myvector.y)
    println(myvector.z)
    
    myvector.x = 4.0
    println(myvector)

    r := myvector + myvector2
    println(r)


    return 0
